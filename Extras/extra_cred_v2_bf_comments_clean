# # Outline MVP
# output a text file named teams.txt
# Create 3 teams: Sharks, Dragons and Raptors
# split the teams by experience
#   count the number of experienced with yes
#   assign them to teams first evenly
#   then assign the rest to the teams
# Extra credit
# Create 18 files
#   name files by player with underscore btw first and last name using replace
#     
#
#=========================================

import csv
import datetime


def pl_letter(pl, team, count,tfile,pop_list,temp_list):
                tfile.write(pl["Name"] + ", " + pl["Soccer Experience"] + ", " + pl["Guardian Name(s)"] + '\n')
                pop_list.append(temp_list.pop(0))
                # Prepare file name string for each player
                pl_file_name = "Letters\\"+pl["Name"].replace(" ","_")+".txt"
                #print(pl_file_name)
                cur_year = datetime.datetime.now()
                cur_year = cur_year.year
                with open(pl_file_name, 'w') as plfile:
                    plfile.write("""
Dear {},

We are pleased to inform you that {} has made the {} team.
The first practice will be on Sunday March 1st, {} at 10am
on the Python field.

Thank you for registering and I look forward to a great
fun filled soccer season!!
                    """.format(
                        pl["Guardian Name(s)"],
                        pl["Name"].split(" ")[0],
                        team,
                        cur_year
                        ))
                count += 1
                return count

# Player assigner function
# Purpose: Split team's evenly into 3 groups
# Code Learnings:
# - looping with for loop:
# .copy() is necessary for loops in order to ensure the 
# loop doesn't behave weirdly and skip indexes when 
# values are removed.
# .pop() the iterated array's COPY
def pl_assigner(file, team, pl_list):
    pl_list_pop=[]
    pl_list_npop=[]
    pl_list_safe=[]
    # This list is a temp list
    pl_list_temp = pl_list.copy()
    count_exp = 0
    count_non_exp = 0
    file.write(team + '\n')
    for pl in pl_list:
        # Array counter
        if pl["Soccer Experience"] == "YES":
            if count_exp <= 2:
                count_exp = pl_letter(pl, team, count_exp, file, pl_list_pop, pl_list_temp)                
            else:
                pl_list_safe.append(pl_list_temp.pop(0))
        elif pl["Soccer Experience"] == "NO":
            if count_non_exp <= 2:                
                count_non_exp = pl_letter(pl, team, count_non_exp, file, pl_list_npop, pl_list_temp)
            else:
                # List of players that are not yet assigned
                pl_list_safe.append(pl_list_temp.pop(0))
    file.write('\n')   
    return pl_list_safe.copy()


def league_builder():
    # Original test for main
    # print('hello')

    # Open csv and read it into an Ordered Dict soccer_reader
    with open('soccerplayers.csv', newline='') as csvfile:
        soccer_reader = csv.DictReader(csvfile)
        
        # initialize pl_list as list
        pl_list = []
        
        # Extract keys and values from the ordered dict 
        # and create a list of dictionaries
        for pl in soccer_reader:
            a = dict(pl.items())
            pl_list.append(a)

    # Create team of arrays
    teams = ['Sharks','Dragons', 'Raptors']

    # Create file named team.txt
    with open('teams.txt', 'w') as file:
        
        # loop through arrays 
        for team in teams:
            pl_list = pl_assigner(file, team, pl_list)


if __name__ == "__main__":
    # call league builder
    league_builder()
    